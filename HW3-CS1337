#include <iostream>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <algorithm>

using namespace std;

void showVector(const string& header, const vector<int>& vec) {
    cout << header << " - Size: " << vec.size() << ", Capacity: " << vec.capacity() << "\n";
    for (int num : vec) {
        cout << num << " ";
    }
    cout << "\n";
}

void bubbleSort(vector<int>& vec) {
    bool swapped;
    do {
        swapped = false;
        for (size_t i = 1; i < vec.size(); i++) {
            if (vec[i - 1] > vec[i]) {
                swap(vec[i - 1], vec[i]);
                swapped = true;
            }
        }
    } while (swapped);
}

int binarySearchAndCount(const vector<int>& vec, int number, int& count) {
    int low = 0, high = vec.size() - 1, mid;
    count = 0;
    while (low <= high) {
        mid = low + (high - low) / 2;
        if (vec[mid] == number) {
            count = 1;
            for (int i = mid - 1; i >= 0 && vec[i] == number; --i) count++;
            for (int i = mid + 1; i < vec.size() && vec[i] == number; ++i) count++;
            return mid;
        }
        else if (vec[mid] < number) low = mid + 1;
        else high = mid - 1;
    }
    return -1;
}

void removeDuplicates(vector<int>& vec) {
    vec.erase(unique(vec.begin(), vec.end()), vec.end());
}

void fillVectorWithRandomNumbers(vector<int>& vec, int maxNumber) {
    for (int& num : vec) {
        num = rand() % (maxNumber + 1);
    }
}

void performSearches(const vector<int>& vec) {
    for (int i = 0; i < 5; ++i) {
        int searchNum, count;
        cout << "Enter a number to search for: ";
        cin >> searchNum;
        int index = binarySearchAndCount(vec, searchNum, count);
        if (index != -1)
            cout << "Number " << searchNum << " found at index " << index << ", Count: " << count << "\n";
        else
            cout << "Number " << searchNum << " not found.\n";
    }
}

void getInput(int& numNumbers, int& maxNumber) {
    cout << "Enter the number of random numbers to generate (suggest 30-40): ";
    cin >> numNumbers;
    do {
        cout << "Enter the maximum size for random numbers (no larger than 20): ";
        cin >> maxNumber;
    } while (maxNumber > 20);
}

int main() {
    srand(static_cast<unsigned>(time(0)));

    int numNumbers, maxNumber;
    getInput(numNumbers, maxNumber);

    vector<int> vec1(numNumbers);
    fillVectorWithRandomNumbers(vec1, maxNumber);

    showVector("Unsorted vector", vec1);

    vector<int> vec2(vec1); 
    sort(vec1.begin(), vec1.end());
    showVector("Sorted vector (vec1)", vec1);

    bubbleSort(vec2);
    showVector("Sorted vector (vec2)", vec2);

    performSearches(vec1);

    removeDuplicates(vec1);
    showVector("Vector after removing duplicates", vec1);

    return 0;
}
